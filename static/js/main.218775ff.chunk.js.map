{"version":3,"sources":["services/fetchComics.js","components/Filter/Filter.component.jsx","components/Header/Header.component.jsx","components/ComicImage/ComicImage.component.jsx","components/Comic/Comic.component.jsx","components/ComicList/ComicList.component.jsx","components/Button/Button.component.jsx","components/CloseButton/CloseButton.component.jsx","components/InlineList/InlineList.component.jsx","components/ComicDescription/ComicDescription.component.jsx","components/Modal/Modal.component.jsx","components/Mailer/Mailer.component.jsx","components/Footer/Footer.component.jsx","App.js","index.js"],"names":["fetchComics","a","PUBLIC_K","timeStamp","toString","Date","hash","md5","results","axios","get","params","responseType","then","response","data","reverse","Filter","callBack","comics","type","className","onChange","e","comicName","target","value","filtered","filter","comic","title","toLowerCase","includes","placeholder","Header","handleFilter","ComicImage","size","images","length","firstImage","path","src","alt","renderHelper","Comic","onSelect","isSelected","onToggleModal","useState","clicked","getState","setState","selectText","onClick","ComicList","selectedComics","onSelectComic","toggleModal","handleSelect","newArray","item","verifySelected","map","index","Button","name","show","disabled","CloseButton","InlineList","list","ComicDescription","description","dangerouslySetInnerHTML","__html","Modal","content","onToggle","creators","items","characters","Mailer","disabledEmail","onTypeEmail","emailTyped","test","onCloseMailer","htmlFor","id","alert","Footer","rel","href","App","filteredComics","showingModal","modalContent","showMailer","useEffect","onToggleMailer","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.218775ff.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport md5 from 'md5';\r\n\r\nconst BASE_URL = 'https://gateway.marvel.com/v1/public/comics';\r\n\r\nconst fetchComics = async () => {\r\n\r\n    const PUBLIC_K = 'f36e1b15baf00be2ff61c947e88add3d';\r\n    const PRIV_K = 'fc1e647f7727f1e75c0ee797dd1fa793040b678b';\r\n\r\n    const timeStamp = toString(new Date());\r\n    const hash = md5(timeStamp + PRIV_K + PUBLIC_K);\r\n\r\n    const results = axios.get(BASE_URL, {\r\n        params: {\r\n            'apikey': PUBLIC_K,\r\n            'limit': 100,\r\n            'hash': hash,\r\n            'ts': timeStamp\r\n        },\r\n        responseType: 'json'\r\n    }).then((response) => {\r\n        return response.data.data.results.reverse();\r\n    })\r\n\r\n    return results;\r\n}\r\n\r\nexport default fetchComics;","import React from 'react';\r\nimport './Filter.styles.scss';\r\n\r\nconst Filter = ({ callBack, comics }) => {\r\n\r\n    const onFilter = (e) => {\r\n        let comicName = e.target.value;\r\n        let filtered = comics.filter((comic) => (comic.title.toLowerCase()).includes(comicName.toLowerCase()));\r\n        callBack(filtered);\r\n    }\r\n\r\n    return (\r\n        <input type=\"text\" className=\"FilterInput\" onChange={onFilter} placeholder=\"Type something to filter\" />\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport './Header.styles.scss';\r\nimport Filter from '../Filter/Filter.component';\r\n\r\n\r\nconst Header = ({ handleFilter, comics }) => {\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Filter callBack={handleFilter} comics={comics} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './ComicImage.styles.scss';\r\n\r\n\r\nconst ComicImage = ({ comic, size }) => {\r\n\r\n    const imageSize = () => {\r\n\r\n        if (size === 'medium') {\r\n            return '/portrait_medium.jpg';\r\n        } else if (size === 'xlarge') {\r\n            return '/portrait_xlarge.jpg';\r\n        } else if (size === 'small') {\r\n            return '/portrait_small.jpg';\r\n        } else if (size === 'uncanny') {\r\n            return '/portrait_uncanny.jpg';\r\n        }\r\n        else {\r\n            return '/portrait_medium.jpg'\r\n        }\r\n\r\n    }\r\n\r\n    const renderHelper = () => {\r\n        if (comic.images.length > 0) {\r\n            let firstImage = comic.images[0].path;\r\n            return <img className={size + 'comicImg'} src={firstImage + imageSize(size)} alt={comic.title} />\r\n        } else {\r\n            return <div className=\"imgPlaceholder\"><span>No image</span></div>\r\n        }\r\n    }\r\n\r\n    return renderHelper();\r\n}\r\n\r\nexport default ComicImage;","import React, { useState } from 'react';\r\nimport './Comic.styles.scss';\r\n\r\nimport ComicImage from '../ComicImage/ComicImage.component';\r\n\r\nconst Comic = ({ comic, onSelect, isSelected, onToggleModal }) => {\r\n    const [getState, setState] = useState({ clicked: false });\r\n    const { clicked } = getState;\r\n\r\n    const onClick = () => {\r\n        setState({ clicked: !clicked });\r\n    }\r\n\r\n    const selectText = !isSelected ? 'Select' : 'Unselect';\r\n\r\n    return (\r\n        <li className={isSelected ? 'comic selected' : 'comic'} onClick={onClick} >\r\n\r\n            <ComicImage comic={comic} size='xlarge'/>\r\n            <span className=\"comicTitle\" >{comic.title}</span>\r\n            \r\n            {\r\n                clicked ? (\r\n                    <div className=\"comicOptions\">\r\n                        <div className=\"btnsBox\">\r\n                            <button\r\n                                className=\"btn comicDetails\"\r\n                                onClick={() => onToggleModal(comic)}\r\n                            >Details</button>\r\n                            \r\n                            <button\r\n                                className=\"btn selectComic\"\r\n                                onClick={() => onSelect(comic)}\r\n                            >{selectText}</button>\r\n                        </div>\r\n                    </div>\r\n                ) : null\r\n            }\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Comic;","import React from 'react';\r\nimport './ComicList.styles.scss';\r\n\r\nimport Comic from '../Comic/Comic.component';\r\n\r\n\r\nconst ComicList = ({ comics, selectedComics, onSelectComic, toggleModal }) => {\r\n\r\n    const handleSelect = (comic) => {\r\n        if (!selectedComics) {\r\n            onSelectComic([comic]);\r\n        } else {\r\n            if (!selectedComics.includes(comic)) {\r\n                onSelectComic([...selectedComics, comic]);\r\n            } else {\r\n                let newArray = selectedComics.filter((item) => item !== comic);\r\n                onSelectComic(newArray);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const verifySelected = (comic) => {\r\n        let isSelected = false;\r\n\r\n        if (selectedComics && selectedComics.includes(comic)) {\r\n            isSelected = true;\r\n        }\r\n\r\n        return isSelected;\r\n    }\r\n\r\n    return (\r\n        <ul className=\"comicList\">\r\n            {\r\n                comics !== null && comics.length > 0 ? (\r\n                    comics.map((comic, index) => (\r\n                        <Comic\r\n                            key={index}\r\n                            comic={comic}\r\n                            onSelect={handleSelect}\r\n                            isSelected={verifySelected(comic)}\r\n                            onToggleModal={toggleModal}\r\n                        />\r\n                    ))\r\n                ) : comics !==null && comics.length === 0 ?\r\n                    <div className=\"loading nope\"><p>No Comics found.</p></div>\r\n                    : <div className=\"loading\"><p>Loading Comics...</p></div>\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ComicList;","import React from 'react';\r\nimport './Button.styles.scss';\r\n\r\n\r\nconst Button = ({ name, onClick, show, disabled = false }) => {\r\n\r\n    const renderHelper = () => {\r\n        if (show) {\r\n            if (!disabled) {\r\n                return <button className={disabled ? 'button disabled' : 'button'} onClick={() => onClick()}>{name}</button>;\r\n            } else {\r\n                return <button className={disabled ? 'button disabled' : 'button'} >{name}</button>;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return renderHelper();\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './CloseButton.styles.scss';\r\n\r\n\r\nconst CloseButton = ({ onClick }) => (\r\n    <button className=\"closeButton\" onClick={onClick}>X</button>\r\n)\r\n\r\nexport default CloseButton;","import React from 'react';\r\nimport './InlineList.styles.scss';\r\n\r\n\r\nconst InlineList = ({ title, list }) => {\r\n    \r\n    const renderHelper = () => {\r\n        if (list.length > 0) {\r\n            return (\r\n                <ul className=\"inlineList\">\r\n                    {\r\n                        list.map((item, index) => (\r\n                            <li key={index}>{item.name} | </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            )\r\n        } else {\r\n            return <p className=\"errorMsg\">Not available</p>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"listTitle\">{title}</h3>\r\n            { renderHelper() }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InlineList;","import React from 'react';\r\nimport './ComicDescription.styles.scss';\r\n\r\nconst ComicDescription = ({ description }) => {\r\n\r\n    const renderHelper = () => {\r\n        if (description) {\r\n            return (\r\n                <p className=\"comicDescription\"\r\n                    dangerouslySetInnerHTML={{ __html: description }}></p>\r\n            )\r\n        } else {\r\n            return <p className=\"errorMsg\">Not available</p>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"descriptionTitle\">Description</h3>\r\n            { renderHelper()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicDescription;","import React from 'react';\r\nimport './Modal.styles.scss';\r\n\r\nimport ComicImage from '../ComicImage/ComicImage.component';\r\nimport CloseButton from '../CloseButton/CloseButton.component';\r\nimport InlineList from '../InlineList/InlineList.component';\r\nimport ComicDescription from '../ComicDescription/ComicDescription.component';\r\n\r\nconst Modal = ({ show, content, onToggle }) => {\r\n\r\n    const renderHelper = (content) => {\r\n        if (content) {\r\n            return (\r\n                <div className={show ? 'modalBackground' : 'modalBackground hide'}>\r\n                    <div className=\"innerContainer\">\r\n                        <CloseButton onClick={() => onToggle(null)} />\r\n\r\n                        <div className=\"column image\">\r\n                            <ComicImage comic={content} size='uncanny' />\r\n                        </div>\r\n\r\n                        <div className=\"column infos\">\r\n                            <h2 className=\"comicTitle\">{content.title}</h2>\r\n\r\n                            <InlineList title=\"Creators\" list={content.creators.items} />\r\n                            <InlineList title=\"Characters\" list={content.characters.items} />\r\n                            <ComicDescription description={content.description} />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return renderHelper(content);\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport './Mailer.styles.scss';\r\n\r\nimport ComicImage from '../ComicImage/ComicImage.component';\r\nimport Button from '../Button/Button.component';\r\nimport CloseButton from '../CloseButton/CloseButton.component';\r\nimport InlineList from '../InlineList/InlineList.component';\r\nimport ComicDescription from '../ComicDescription/ComicDescription.component';\r\n\r\nconst Mailer = ({ show, selectedComics, onToggle }) => {\r\n\r\n    const [getState, setState] = useState({ disabledEmail: true });\r\n    const { disabledEmail } = getState;\r\n\r\n    const onTypeEmail = (e) => {\r\n        const emailTyped = e.target.value;\r\n\r\n        let regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        if (regex.test(emailTyped.toLowerCase())) {\r\n            setState({ disabledEmail: false })\r\n        } else {\r\n            setState({ disabledEmail: true })\r\n        }\r\n\r\n    }\r\n\r\n    const onCloseMailer = () => {\r\n        onToggle();\r\n        setState({ disabledEmail: true })\r\n    }\r\n\r\n    const onSendEmail = () => {\r\n        onCloseMailer();\r\n        alert(\"The email has been sent! Thanks!\");\r\n    }\r\n\r\n    const renderHelper = () => {\r\n\r\n        if (show) {\r\n            return (\r\n                <div className=\"mailerBG\">\r\n                    <div className=\"innerContainer\">\r\n                        <h2 className=\"titleContainer\">Send comics via email</h2>\r\n                        <CloseButton onClick={() => onCloseMailer()} />\r\n\r\n                        <label htmlFor=\"email\" className=\"emailLabel\">Send to:</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" className=\"emailInput\" onChange={onTypeEmail} />\r\n\r\n                        <table className=\"comicsTable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"imageColumn\">Image</th>\r\n                                    <th className=\"titleColumn\">Title</th>\r\n                                    <th className=\"descriptionColumn\">Details</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {\r\n                                    selectedComics && selectedComics.length > 0 ? (\r\n                                        selectedComics.map((comic, index) => (\r\n                                            <tr key={index}>\r\n                                                <td>\r\n                                                    <ComicImage comic={comic} size=\"medium\" />\r\n                                                </td>\r\n                                                <td>{comic.title}</td>\r\n                                                <td>\r\n                                                    <InlineList title=\"Creators\" list={comic.creators.items} />\r\n                                                    <InlineList title=\"Characters\" list={comic.characters.items} />\r\n                                                    <ComicDescription description={comic.description} />\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    ) : null\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <Button name=\"Send\" disabled={disabledEmail} show={true} onClick={() => onSendEmail()} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return renderHelper()\r\n}\r\n\r\nexport default Mailer;","import React from 'react';\r\nimport './Footer.styles.scss';\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>&copy;2021 Create by <a className=\"t14g\" target=\"_blank\"  rel=\"noreferrer\" href=\"https://github.com/T14g\">T14g</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import './App.scss';\nimport { useState, useEffect } from 'react';\nimport fetchComics from './services/fetchComics';\n\nimport Header from './components/Header/Header.component';\nimport ComicList from './components/ComicList/ComicList.component';\nimport Button from './components/Button/Button.component';\nimport Modal from './components/Modal/Modal.component';\nimport Mailer from './components/Mailer/Mailer.component';\nimport Footer from './components/Footer/Footer.component';\n\nfunction App() {\n\n  const [getState, setState] = useState({\n    comics: [],\n    filteredComics: null,\n    selectedComics: [],\n    showingModal: false,\n    modalContent: null,\n    showMailer: false\n  });\n\n  const { comics, filteredComics, selectedComics, showingModal, modalContent, showMailer } = getState;\n\n  useEffect(() => {\n    fetchComics().then((results) => {\n\n      setState({ comics: results, filteredComics: results });\n      \n    })\n  }, [])\n\n  const onFilterComic = (data) => {\n    setState({ ...getState, filteredComics: data });\n  }\n\n  const onSelectComic = (data) => {\n    setState({ ...getState, selectedComics: data });\n  }\n\n  const onToggleModal = (data) => {\n    setState({ ...getState, showingModal: !showingModal, modalContent: data });\n  }\n\n  const allowEmailShare = () => {\n    return selectedComics === undefined || selectedComics.length === 0 ? false : true;\n  }\n\n  const onToggleMailer = () => {\n    setState({ ...getState, showMailer: !showMailer });\n  }\n\n  return (\n    <div className={showingModal || showMailer ? 'App blockScroll' : 'App'} >\n      <Header handleFilter={onFilterComic} comics={comics} />\n\n      <div className=\"container\">\n        <ComicList\n          comics={filteredComics}\n          onSelectComic={onSelectComic}\n          selectedComics={selectedComics}\n          toggleModal={onToggleModal}\n        />\n\n        <Button name=\"Share Selected\" show={allowEmailShare()} onClick={onToggleMailer} />\n      </div>\n\n      <Modal show={showingModal} content={modalContent} onToggle={onToggleModal} />\n      <Mailer show={showMailer} selectedComics={selectedComics} onToggle={onToggleMailer} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);  \n"],"sourceRoot":""}